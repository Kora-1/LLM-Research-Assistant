import google.generativeai as genai
from config import GEMINI_API_KEY

# Configure the Google Generative AI API with the provided API key
genai.configure(api_key=GEMINI_API_KEY)

# Select the generative model to be used for content generation
selected_model = "gemini-2.0-flash"
model = genai.GenerativeModel(selected_model)


def truncate(text, max_chars=8000):
    """
    Truncates the provided text to the specified maximum number of characters.

    This function ensures that the text does not exceed the specified length
    by truncating it to `max_chars` characters. This is useful when working
    with models that have a character limit.

    Parameters:
    - text (str): The input text to be truncated.
    - max_chars (int): The maximum number of characters to retain from the text. Defaults to 8000.

    Returns:
    - str: The truncated text.

    Example:
    >>> truncate("This is a long piece of text that will be truncated.", 10)
    'This is a'
    """
    return text[:max_chars]


def summarize_content(raw_text: str, query: str) -> str:
    """
    Summarizes the given raw text in relation to a specified query.

    This function generates a summary of the provided content by passing it to
    a generative AI model. The summary focuses on the key points related to
    the specified query, removing irrelevant parts of the content.

    Parameters:
    - raw_text (str): The full content that needs to be summarized.
    - query (str): The query or topic to which the content should be summarized.

    Returns:
    - str: The summarized text generated by the AI model.

    Example:
    >>> summarize_content("AI in healthcare is revolutionizing diagnostics and patient care.", "What are the benefits of AI in healthcare?")
    'AI in healthcare improves diagnostics and patient care.'
    """
    # Truncate the raw text to ensure it fits within model's character limits
    text = truncate(raw_text)

    # Construct a prompt that instructs the AI model to summarize the content in relation to the query
    prompt = f"""
    You are a research assistant. Summarize the following content in relation to the query: '{query}'.
    Focus on key points and remove irrelevant parts.

    Content:
    {raw_text}
    """

    # Generate the summary using the model
    response = model.generate_content(prompt)

    # Return the summary generated by the model
    return response.text
